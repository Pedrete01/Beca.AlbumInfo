// <auto-generated />
using Beca.AlbumInfo.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Beca.AlbumInfo.API.Migrations
{
    [DbContext(typeof(AlbumInfoContext))]
    [Migration("20221105112518_AlbumInfoDBInitialMigration")]
    partial class AlbumInfoDBInitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("Beca.AlbumInfo.API.Entities.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Albumes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Album de Imagine Dragons.",
                            Title = "Evolve"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Album de AJR.",
                            Title = "OK Orchestra"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Album de Kaleo.",
                            Title = "Surface sounds"
                        });
                });

            modelBuilder.Entity("Beca.AlbumInfo.API.Entities.Cancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AlbumId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Canciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Description = "Pain!\r\nYou made me a, you made me a believer, believer\r\nPain!\r\nYou break me down, and build me up, believer, believer",
                            Title = "Believer"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            Description = "Whatever it takes\r\n'Cause I love the adrenaline in my veins\r\nI do whatever it takes\r\n'Cause I love how it feels when I break the chains\r\nWhatever it takes",
                            Title = "Whatever it takes"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 2,
                            Description = "So put your best face on, everybody\r\nPretend you know this song, everybody\r\nCome hang\r\nLet's go out with a bang (bang! Bang! Bang!)",
                            Title = "Bang!"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 2,
                            Description = "It took a little while, but I found love (found love)\r\nI thought you'd reply, you just thumbed up (thumbed up)\r\nI play a lot of shows but you don't come (don't come)\r\nI don't even mind, this is so dumb, so dumb",
                            Title = "Joe"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 3,
                            Description = "I want to break my baby\r\nYou know she loves to fake it\r\nI want to break my baby\r\nYeah, hold her down, bring her down now",
                            Title = "Break my baby"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 3,
                            Description = "You've got to stay skinny, don't you, girl?\r\nYou've got to stay pretty while you can\r\nYou've got to stay hungry for the fans\r\nOr they'll try to burn you all out\r\nThey'll try to burn you all out, yeah",
                            Title = "Skinny"
                        });
                });

            modelBuilder.Entity("Beca.AlbumInfo.API.Entities.Cancion", b =>
                {
                    b.HasOne("Beca.AlbumInfo.API.Entities.Album", "Album")
                        .WithMany("Canciones")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("Beca.AlbumInfo.API.Entities.Album", b =>
                {
                    b.Navigation("Canciones");
                });
#pragma warning restore 612, 618
        }
    }
}
